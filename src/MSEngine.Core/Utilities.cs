using System.Security.Cryptography;

namespace MSEngine.Core;

public static class Utilities
{
	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static bool AreNodesAdjacent(int nodeIndexOne, int nodeIndexTwo)
	{
		Debug.Assert(nodeIndexOne >= 0);
		Debug.Assert(nodeIndexTwo >= 0);
		Debug.Assert(nodeIndexOne != nodeIndexTwo);

		return GetAdjacentNodeIndexes(nodeIndexOne)
			.Contains(nodeIndexTwo);
	}

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static ReadOnlySpan<int> GetAdjacentNodeIndexes(int index)
	{
		Debug.Assert(index >= 0);

#if BEGINNER
		Debug.Assert(index < 81);

		return index switch
		{
			0 => [1, 9, 10],
			1 => [0, 2, 9, 10, 11],
			2 => [1, 3, 10, 11, 12],
			3 => [2, 4, 11, 12, 13],
			4 => [3, 5, 12, 13, 14],
			5 => [4, 6, 13, 14, 15],
			6 => [5, 7, 14, 15, 16],
			7 => [6, 8, 15, 16, 17],
			8 => [7, 16, 17],
			9 => [0, 1, 10, 18, 19],
			10 => [0, 1, 2, 9, 11, 18, 19, 20],
			11 => [1, 2, 3, 10, 12, 19, 20, 21],
			12 => [2, 3, 4, 11, 13, 20, 21, 22],
			13 => [3, 4, 5, 12, 14, 21, 22, 23],
			14 => [4, 5, 6, 13, 15, 22, 23, 24],
			15 => [5, 6, 7, 14, 16, 23, 24, 25],
			16 => [6, 7, 8, 15, 17, 24, 25, 26],
			17 => [7, 8, 16, 25, 26],
			18 => [9, 10, 19, 27, 28],
			19 => [9, 10, 11, 18, 20, 27, 28, 29],
			20 => [10, 11, 12, 19, 21, 28, 29, 30],
			21 => [11, 12, 13, 20, 22, 29, 30, 31],
			22 => [12, 13, 14, 21, 23, 30, 31, 32],
			23 => [13, 14, 15, 22, 24, 31, 32, 33],
			24 => [14, 15, 16, 23, 25, 32, 33, 34],
			25 => [15, 16, 17, 24, 26, 33, 34, 35],
			26 => [16, 17, 25, 34, 35],
			27 => [18, 19, 28, 36, 37],
			28 => [18, 19, 20, 27, 29, 36, 37, 38],
			29 => [19, 20, 21, 28, 30, 37, 38, 39],
			30 => [20, 21, 22, 29, 31, 38, 39, 40],
			31 => [21, 22, 23, 30, 32, 39, 40, 41],
			32 => [22, 23, 24, 31, 33, 40, 41, 42],
			33 => [23, 24, 25, 32, 34, 41, 42, 43],
			34 => [24, 25, 26, 33, 35, 42, 43, 44],
			35 => [25, 26, 34, 43, 44],
			36 => [27, 28, 37, 45, 46],
			37 => [27, 28, 29, 36, 38, 45, 46, 47],
			38 => [28, 29, 30, 37, 39, 46, 47, 48],
			39 => [29, 30, 31, 38, 40, 47, 48, 49],
			40 => [30, 31, 32, 39, 41, 48, 49, 50],
			41 => [31, 32, 33, 40, 42, 49, 50, 51],
			42 => [32, 33, 34, 41, 43, 50, 51, 52],
			43 => [33, 34, 35, 42, 44, 51, 52, 53],
			44 => [34, 35, 43, 52, 53],
			45 => [36, 37, 46, 54, 55],
			46 => [36, 37, 38, 45, 47, 54, 55, 56],
			47 => [37, 38, 39, 46, 48, 55, 56, 57],
			48 => [38, 39, 40, 47, 49, 56, 57, 58],
			49 => [39, 40, 41, 48, 50, 57, 58, 59],
			50 => [40, 41, 42, 49, 51, 58, 59, 60],
			51 => [41, 42, 43, 50, 52, 59, 60, 61],
			52 => [42, 43, 44, 51, 53, 60, 61, 62],
			53 => [43, 44, 52, 61, 62],
			54 => [45, 46, 55, 63, 64],
			55 => [45, 46, 47, 54, 56, 63, 64, 65],
			56 => [46, 47, 48, 55, 57, 64, 65, 66],
			57 => [47, 48, 49, 56, 58, 65, 66, 67],
			58 => [48, 49, 50, 57, 59, 66, 67, 68],
			59 => [49, 50, 51, 58, 60, 67, 68, 69],
			60 => [50, 51, 52, 59, 61, 68, 69, 70],
			61 => [51, 52, 53, 60, 62, 69, 70, 71],
			62 => [52, 53, 61, 70, 71],
			63 => [54, 55, 64, 72, 73],
			64 => [54, 55, 56, 63, 65, 72, 73, 74],
			65 => [55, 56, 57, 64, 66, 73, 74, 75],
			66 => [56, 57, 58, 65, 67, 74, 75, 76],
			67 => [57, 58, 59, 66, 68, 75, 76, 77],
			68 => [58, 59, 60, 67, 69, 76, 77, 78],
			69 => [59, 60, 61, 68, 70, 77, 78, 79],
			70 => [60, 61, 62, 69, 71, 78, 79, 80],
			71 => [61, 62, 70, 79, 80],
			72 => [63, 64, 73],
			73 => [63, 64, 65, 72, 74],
			74 => [64, 65, 66, 73, 75],
			75 => [65, 66, 67, 74, 76],
			76 => [66, 67, 68, 75, 77],
			77 => [67, 68, 69, 76, 78],
			78 => [68, 69, 70, 77, 79],
			79 => [69, 70, 71, 78, 80],
			80 => [70, 71, 79],
			_ => []
		};
#elif INTERMEDIATE
		Debug.Assert(index < 256);

		return index switch
		{
			0 => [1, 16, 17],
			1 => [0, 2, 16, 17, 18],
			2 => [1, 3, 17, 18, 19],
			3 => [2, 4, 18, 19, 20],
			4 => [3, 5, 19, 20, 21],
			5 => [4, 6, 20, 21, 22],
			6 => [5, 7, 21, 22, 23],
			7 => [6, 8, 22, 23, 24],
			8 => [7, 9, 23, 24, 25],
			9 => [8, 10, 24, 25, 26],
			10 => [9, 11, 25, 26, 27],
			11 => [10, 12, 26, 27, 28],
			12 => [11, 13, 27, 28, 29],
			13 => [12, 14, 28, 29, 30],
			14 => [13, 15, 29, 30, 31],
			15 => [14, 30, 31],
			16 => [0, 1, 17, 32, 33],
			17 => [0, 1, 2, 16, 18, 32, 33, 34],
			18 => [1, 2, 3, 17, 19, 33, 34, 35],
			19 => [2, 3, 4, 18, 20, 34, 35, 36],
			20 => [3, 4, 5, 19, 21, 35, 36, 37],
			21 => [4, 5, 6, 20, 22, 36, 37, 38],
			22 => [5, 6, 7, 21, 23, 37, 38, 39],
			23 => [6, 7, 8, 22, 24, 38, 39, 40],
			24 => [7, 8, 9, 23, 25, 39, 40, 41],
			25 => [8, 9, 10, 24, 26, 40, 41, 42],
			26 => [9, 10, 11, 25, 27, 41, 42, 43],
			27 => [10, 11, 12, 26, 28, 42, 43, 44],
			28 => [11, 12, 13, 27, 29, 43, 44, 45],
			29 => [12, 13, 14, 28, 30, 44, 45, 46],
			30 => [13, 14, 15, 29, 31, 45, 46, 47],
			31 => [14, 15, 30, 46, 47],
			32 => [16, 17, 33, 48, 49],
			33 => [16, 17, 18, 32, 34, 48, 49, 50],
			34 => [17, 18, 19, 33, 35, 49, 50, 51],
			35 => [18, 19, 20, 34, 36, 50, 51, 52],
			36 => [19, 20, 21, 35, 37, 51, 52, 53],
			37 => [20, 21, 22, 36, 38, 52, 53, 54],
			38 => [21, 22, 23, 37, 39, 53, 54, 55],
			39 => [22, 23, 24, 38, 40, 54, 55, 56],
			40 => [23, 24, 25, 39, 41, 55, 56, 57],
			41 => [24, 25, 26, 40, 42, 56, 57, 58],
			42 => [25, 26, 27, 41, 43, 57, 58, 59],
			43 => [26, 27, 28, 42, 44, 58, 59, 60],
			44 => [27, 28, 29, 43, 45, 59, 60, 61],
			45 => [28, 29, 30, 44, 46, 60, 61, 62],
			46 => [29, 30, 31, 45, 47, 61, 62, 63],
			47 => [30, 31, 46, 62, 63],
			48 => [32, 33, 49, 64, 65],
			49 => [32, 33, 34, 48, 50, 64, 65, 66],
			50 => [33, 34, 35, 49, 51, 65, 66, 67],
			51 => [34, 35, 36, 50, 52, 66, 67, 68],
			52 => [35, 36, 37, 51, 53, 67, 68, 69],
			53 => [36, 37, 38, 52, 54, 68, 69, 70],
			54 => [37, 38, 39, 53, 55, 69, 70, 71],
			55 => [38, 39, 40, 54, 56, 70, 71, 72],
			56 => [39, 40, 41, 55, 57, 71, 72, 73],
			57 => [40, 41, 42, 56, 58, 72, 73, 74],
			58 => [41, 42, 43, 57, 59, 73, 74, 75],
			59 => [42, 43, 44, 58, 60, 74, 75, 76],
			60 => [43, 44, 45, 59, 61, 75, 76, 77],
			61 => [44, 45, 46, 60, 62, 76, 77, 78],
			62 => [45, 46, 47, 61, 63, 77, 78, 79],
			63 => [46, 47, 62, 78, 79],
			64 => [48, 49, 65, 80, 81],
			65 => [48, 49, 50, 64, 66, 80, 81, 82],
			66 => [49, 50, 51, 65, 67, 81, 82, 83],
			67 => [50, 51, 52, 66, 68, 82, 83, 84],
			68 => [51, 52, 53, 67, 69, 83, 84, 85],
			69 => [52, 53, 54, 68, 70, 84, 85, 86],
			70 => [53, 54, 55, 69, 71, 85, 86, 87],
			71 => [54, 55, 56, 70, 72, 86, 87, 88],
			72 => [55, 56, 57, 71, 73, 87, 88, 89],
			73 => [56, 57, 58, 72, 74, 88, 89, 90],
			74 => [57, 58, 59, 73, 75, 89, 90, 91],
			75 => [58, 59, 60, 74, 76, 90, 91, 92],
			76 => [59, 60, 61, 75, 77, 91, 92, 93],
			77 => [60, 61, 62, 76, 78, 92, 93, 94],
			78 => [61, 62, 63, 77, 79, 93, 94, 95],
			79 => [62, 63, 78, 94, 95],
			80 => [64, 65, 81, 96, 97],
			81 => [64, 65, 66, 80, 82, 96, 97, 98],
			82 => [65, 66, 67, 81, 83, 97, 98, 99],
			83 => [66, 67, 68, 82, 84, 98, 99, 100],
			84 => [67, 68, 69, 83, 85, 99, 100, 101],
			85 => [68, 69, 70, 84, 86, 100, 101, 102],
			86 => [69, 70, 71, 85, 87, 101, 102, 103],
			87 => [70, 71, 72, 86, 88, 102, 103, 104],
			88 => [71, 72, 73, 87, 89, 103, 104, 105],
			89 => [72, 73, 74, 88, 90, 104, 105, 106],
			90 => [73, 74, 75, 89, 91, 105, 106, 107],
			91 => [74, 75, 76, 90, 92, 106, 107, 108],
			92 => [75, 76, 77, 91, 93, 107, 108, 109],
			93 => [76, 77, 78, 92, 94, 108, 109, 110],
			94 => [77, 78, 79, 93, 95, 109, 110, 111],
			95 => [78, 79, 94, 110, 111],
			96 => [80, 81, 97, 112, 113],
			97 => [80, 81, 82, 96, 98, 112, 113, 114],
			98 => [81, 82, 83, 97, 99, 113, 114, 115],
			99 => [82, 83, 84, 98, 100, 114, 115, 116],
			100 => [83, 84, 85, 99, 101, 115, 116, 117],
			101 => [84, 85, 86, 100, 102, 116, 117, 118],
			102 => [85, 86, 87, 101, 103, 117, 118, 119],
			103 => [86, 87, 88, 102, 104, 118, 119, 120],
			104 => [87, 88, 89, 103, 105, 119, 120, 121],
			105 => [88, 89, 90, 104, 106, 120, 121, 122],
			106 => [89, 90, 91, 105, 107, 121, 122, 123],
			107 => [90, 91, 92, 106, 108, 122, 123, 124],
			108 => [91, 92, 93, 107, 109, 123, 124, 125],
			109 => [92, 93, 94, 108, 110, 124, 125, 126],
			110 => [93, 94, 95, 109, 111, 125, 126, 127],
			111 => [94, 95, 110, 126, 127],
			112 => [96, 97, 113, 128, 129],
			113 => [96, 97, 98, 112, 114, 128, 129, 130],
			114 => [97, 98, 99, 113, 115, 129, 130, 131],
			115 => [98, 99, 100, 114, 116, 130, 131, 132],
			116 => [99, 100, 101, 115, 117, 131, 132, 133],
			117 => [100, 101, 102, 116, 118, 132, 133, 134],
			118 => [101, 102, 103, 117, 119, 133, 134, 135],
			119 => [102, 103, 104, 118, 120, 134, 135, 136],
			120 => [103, 104, 105, 119, 121, 135, 136, 137],
			121 => [104, 105, 106, 120, 122, 136, 137, 138],
			122 => [105, 106, 107, 121, 123, 137, 138, 139],
			123 => [106, 107, 108, 122, 124, 138, 139, 140],
			124 => [107, 108, 109, 123, 125, 139, 140, 141],
			125 => [108, 109, 110, 124, 126, 140, 141, 142],
			126 => [109, 110, 111, 125, 127, 141, 142, 143],
			127 => [110, 111, 126, 142, 143],
			128 => [112, 113, 129, 144, 145],
			129 => [112, 113, 114, 128, 130, 144, 145, 146],
			130 => [113, 114, 115, 129, 131, 145, 146, 147],
			131 => [114, 115, 116, 130, 132, 146, 147, 148],
			132 => [115, 116, 117, 131, 133, 147, 148, 149],
			133 => [116, 117, 118, 132, 134, 148, 149, 150],
			134 => [117, 118, 119, 133, 135, 149, 150, 151],
			135 => [118, 119, 120, 134, 136, 150, 151, 152],
			136 => [119, 120, 121, 135, 137, 151, 152, 153],
			137 => [120, 121, 122, 136, 138, 152, 153, 154],
			138 => [121, 122, 123, 137, 139, 153, 154, 155],
			139 => [122, 123, 124, 138, 140, 154, 155, 156],
			140 => [123, 124, 125, 139, 141, 155, 156, 157],
			141 => [124, 125, 126, 140, 142, 156, 157, 158],
			142 => [125, 126, 127, 141, 143, 157, 158, 159],
			143 => [126, 127, 142, 158, 159],
			144 => [128, 129, 145, 160, 161],
			145 => [128, 129, 130, 144, 146, 160, 161, 162],
			146 => [129, 130, 131, 145, 147, 161, 162, 163],
			147 => [130, 131, 132, 146, 148, 162, 163, 164],
			148 => [131, 132, 133, 147, 149, 163, 164, 165],
			149 => [132, 133, 134, 148, 150, 164, 165, 166],
			150 => [133, 134, 135, 149, 151, 165, 166, 167],
			151 => [134, 135, 136, 150, 152, 166, 167, 168],
			152 => [135, 136, 137, 151, 153, 167, 168, 169],
			153 => [136, 137, 138, 152, 154, 168, 169, 170],
			154 => [137, 138, 139, 153, 155, 169, 170, 171],
			155 => [138, 139, 140, 154, 156, 170, 171, 172],
			156 => [139, 140, 141, 155, 157, 171, 172, 173],
			157 => [140, 141, 142, 156, 158, 172, 173, 174],
			158 => [141, 142, 143, 157, 159, 173, 174, 175],
			159 => [142, 143, 158, 174, 175],
			160 => [144, 145, 161, 176, 177],
			161 => [144, 145, 146, 160, 162, 176, 177, 178],
			162 => [145, 146, 147, 161, 163, 177, 178, 179],
			163 => [146, 147, 148, 162, 164, 178, 179, 180],
			164 => [147, 148, 149, 163, 165, 179, 180, 181],
			165 => [148, 149, 150, 164, 166, 180, 181, 182],
			166 => [149, 150, 151, 165, 167, 181, 182, 183],
			167 => [150, 151, 152, 166, 168, 182, 183, 184],
			168 => [151, 152, 153, 167, 169, 183, 184, 185],
			169 => [152, 153, 154, 168, 170, 184, 185, 186],
			170 => [153, 154, 155, 169, 171, 185, 186, 187],
			171 => [154, 155, 156, 170, 172, 186, 187, 188],
			172 => [155, 156, 157, 171, 173, 187, 188, 189],
			173 => [156, 157, 158, 172, 174, 188, 189, 190],
			174 => [157, 158, 159, 173, 175, 189, 190, 191],
			175 => [158, 159, 174, 190, 191],
			176 => [160, 161, 177, 192, 193],
			177 => [160, 161, 162, 176, 178, 192, 193, 194],
			178 => [161, 162, 163, 177, 179, 193, 194, 195],
			179 => [162, 163, 164, 178, 180, 194, 195, 196],
			180 => [163, 164, 165, 179, 181, 195, 196, 197],
			181 => [164, 165, 166, 180, 182, 196, 197, 198],
			182 => [165, 166, 167, 181, 183, 197, 198, 199],
			183 => [166, 167, 168, 182, 184, 198, 199, 200],
			184 => [167, 168, 169, 183, 185, 199, 200, 201],
			185 => [168, 169, 170, 184, 186, 200, 201, 202],
			186 => [169, 170, 171, 185, 187, 201, 202, 203],
			187 => [170, 171, 172, 186, 188, 202, 203, 204],
			188 => [171, 172, 173, 187, 189, 203, 204, 205],
			189 => [172, 173, 174, 188, 190, 204, 205, 206],
			190 => [173, 174, 175, 189, 191, 205, 206, 207],
			191 => [174, 175, 190, 206, 207],
			192 => [176, 177, 193, 208, 209],
			193 => [176, 177, 178, 192, 194, 208, 209, 210],
			194 => [177, 178, 179, 193, 195, 209, 210, 211],
			195 => [178, 179, 180, 194, 196, 210, 211, 212],
			196 => [179, 180, 181, 195, 197, 211, 212, 213],
			197 => [180, 181, 182, 196, 198, 212, 213, 214],
			198 => [181, 182, 183, 197, 199, 213, 214, 215],
			199 => [182, 183, 184, 198, 200, 214, 215, 216],
			200 => [183, 184, 185, 199, 201, 215, 216, 217],
			201 => [184, 185, 186, 200, 202, 216, 217, 218],
			202 => [185, 186, 187, 201, 203, 217, 218, 219],
			203 => [186, 187, 188, 202, 204, 218, 219, 220],
			204 => [187, 188, 189, 203, 205, 219, 220, 221],
			205 => [188, 189, 190, 204, 206, 220, 221, 222],
			206 => [189, 190, 191, 205, 207, 221, 222, 223],
			207 => [190, 191, 206, 222, 223],
			208 => [192, 193, 209, 224, 225],
			209 => [192, 193, 194, 208, 210, 224, 225, 226],
			210 => [193, 194, 195, 209, 211, 225, 226, 227],
			211 => [194, 195, 196, 210, 212, 226, 227, 228],
			212 => [195, 196, 197, 211, 213, 227, 228, 229],
			213 => [196, 197, 198, 212, 214, 228, 229, 230],
			214 => [197, 198, 199, 213, 215, 229, 230, 231],
			215 => [198, 199, 200, 214, 216, 230, 231, 232],
			216 => [199, 200, 201, 215, 217, 231, 232, 233],
			217 => [200, 201, 202, 216, 218, 232, 233, 234],
			218 => [201, 202, 203, 217, 219, 233, 234, 235],
			219 => [202, 203, 204, 218, 220, 234, 235, 236],
			220 => [203, 204, 205, 219, 221, 235, 236, 237],
			221 => [204, 205, 206, 220, 222, 236, 237, 238],
			222 => [205, 206, 207, 221, 223, 237, 238, 239],
			223 => [206, 207, 222, 238, 239],
			224 => [208, 209, 225, 240, 241],
			225 => [208, 209, 210, 224, 226, 240, 241, 242],
			226 => [209, 210, 211, 225, 227, 241, 242, 243],
			227 => [210, 211, 212, 226, 228, 242, 243, 244],
			228 => [211, 212, 213, 227, 229, 243, 244, 245],
			229 => [212, 213, 214, 228, 230, 244, 245, 246],
			230 => [213, 214, 215, 229, 231, 245, 246, 247],
			231 => [214, 215, 216, 230, 232, 246, 247, 248],
			232 => [215, 216, 217, 231, 233, 247, 248, 249],
			233 => [216, 217, 218, 232, 234, 248, 249, 250],
			234 => [217, 218, 219, 233, 235, 249, 250, 251],
			235 => [218, 219, 220, 234, 236, 250, 251, 252],
			236 => [219, 220, 221, 235, 237, 251, 252, 253],
			237 => [220, 221, 222, 236, 238, 252, 253, 254],
			238 => [221, 222, 223, 237, 239, 253, 254, 255],
			239 => [222, 223, 238, 254, 255],
			240 => [224, 225, 241],
			241 => [224, 225, 226, 240, 242],
			242 => [225, 226, 227, 241, 243],
			243 => [226, 227, 228, 242, 244],
			244 => [227, 228, 229, 243, 245],
			245 => [228, 229, 230, 244, 246],
			246 => [229, 230, 231, 245, 247],
			247 => [230, 231, 232, 246, 248],
			248 => [231, 232, 233, 247, 249],
			249 => [232, 233, 234, 248, 250],
			250 => [233, 234, 235, 249, 251],
			251 => [234, 235, 236, 250, 252],
			252 => [235, 236, 237, 251, 253],
			253 => [236, 237, 238, 252, 254],
			254 => [237, 238, 239, 253, 255],
			255 => [238, 239, 254],
			_ => []
		};
#elif EXPERT
		Debug.Assert(index < 480);

		return index switch
		{
			0 => [1, 30, 31],
			1 => [0, 2, 30, 31, 32],
			2 => [1, 3, 31, 32, 33],
			3 => [2, 4, 32, 33, 34],
			4 => [3, 5, 33, 34, 35],
			5 => [4, 6, 34, 35, 36],
			6 => [5, 7, 35, 36, 37],
			7 => [6, 8, 36, 37, 38],
			8 => [7, 9, 37, 38, 39],
			9 => [8, 10, 38, 39, 40],
			10 => [9, 11, 39, 40, 41],
			11 => [10, 12, 40, 41, 42],
			12 => [11, 13, 41, 42, 43],
			13 => [12, 14, 42, 43, 44],
			14 => [13, 15, 43, 44, 45],
			15 => [14, 16, 44, 45, 46],
			16 => [15, 17, 45, 46, 47],
			17 => [16, 18, 46, 47, 48],
			18 => [17, 19, 47, 48, 49],
			19 => [18, 20, 48, 49, 50],
			20 => [19, 21, 49, 50, 51],
			21 => [20, 22, 50, 51, 52],
			22 => [21, 23, 51, 52, 53],
			23 => [22, 24, 52, 53, 54],
			24 => [23, 25, 53, 54, 55],
			25 => [24, 26, 54, 55, 56],
			26 => [25, 27, 55, 56, 57],
			27 => [26, 28, 56, 57, 58],
			28 => [27, 29, 57, 58, 59],
			29 => [28, 58, 59],
			30 => [0, 1, 31, 60, 61],
			31 => [0, 1, 2, 30, 32, 60, 61, 62],
			32 => [1, 2, 3, 31, 33, 61, 62, 63],
			33 => [2, 3, 4, 32, 34, 62, 63, 64],
			34 => [3, 4, 5, 33, 35, 63, 64, 65],
			35 => [4, 5, 6, 34, 36, 64, 65, 66],
			36 => [5, 6, 7, 35, 37, 65, 66, 67],
			37 => [6, 7, 8, 36, 38, 66, 67, 68],
			38 => [7, 8, 9, 37, 39, 67, 68, 69],
			39 => [8, 9, 10, 38, 40, 68, 69, 70],
			40 => [9, 10, 11, 39, 41, 69, 70, 71],
			41 => [10, 11, 12, 40, 42, 70, 71, 72],
			42 => [11, 12, 13, 41, 43, 71, 72, 73],
			43 => [12, 13, 14, 42, 44, 72, 73, 74],
			44 => [13, 14, 15, 43, 45, 73, 74, 75],
			45 => [14, 15, 16, 44, 46, 74, 75, 76],
			46 => [15, 16, 17, 45, 47, 75, 76, 77],
			47 => [16, 17, 18, 46, 48, 76, 77, 78],
			48 => [17, 18, 19, 47, 49, 77, 78, 79],
			49 => [18, 19, 20, 48, 50, 78, 79, 80],
			50 => [19, 20, 21, 49, 51, 79, 80, 81],
			51 => [20, 21, 22, 50, 52, 80, 81, 82],
			52 => [21, 22, 23, 51, 53, 81, 82, 83],
			53 => [22, 23, 24, 52, 54, 82, 83, 84],
			54 => [23, 24, 25, 53, 55, 83, 84, 85],
			55 => [24, 25, 26, 54, 56, 84, 85, 86],
			56 => [25, 26, 27, 55, 57, 85, 86, 87],
			57 => [26, 27, 28, 56, 58, 86, 87, 88],
			58 => [27, 28, 29, 57, 59, 87, 88, 89],
			59 => [28, 29, 58, 88, 89],
			60 => [30, 31, 61, 90, 91],
			61 => [30, 31, 32, 60, 62, 90, 91, 92],
			62 => [31, 32, 33, 61, 63, 91, 92, 93],
			63 => [32, 33, 34, 62, 64, 92, 93, 94],
			64 => [33, 34, 35, 63, 65, 93, 94, 95],
			65 => [34, 35, 36, 64, 66, 94, 95, 96],
			66 => [35, 36, 37, 65, 67, 95, 96, 97],
			67 => [36, 37, 38, 66, 68, 96, 97, 98],
			68 => [37, 38, 39, 67, 69, 97, 98, 99],
			69 => [38, 39, 40, 68, 70, 98, 99, 100],
			70 => [39, 40, 41, 69, 71, 99, 100, 101],
			71 => [40, 41, 42, 70, 72, 100, 101, 102],
			72 => [41, 42, 43, 71, 73, 101, 102, 103],
			73 => [42, 43, 44, 72, 74, 102, 103, 104],
			74 => [43, 44, 45, 73, 75, 103, 104, 105],
			75 => [44, 45, 46, 74, 76, 104, 105, 106],
			76 => [45, 46, 47, 75, 77, 105, 106, 107],
			77 => [46, 47, 48, 76, 78, 106, 107, 108],
			78 => [47, 48, 49, 77, 79, 107, 108, 109],
			79 => [48, 49, 50, 78, 80, 108, 109, 110],
			80 => [49, 50, 51, 79, 81, 109, 110, 111],
			81 => [50, 51, 52, 80, 82, 110, 111, 112],
			82 => [51, 52, 53, 81, 83, 111, 112, 113],
			83 => [52, 53, 54, 82, 84, 112, 113, 114],
			84 => [53, 54, 55, 83, 85, 113, 114, 115],
			85 => [54, 55, 56, 84, 86, 114, 115, 116],
			86 => [55, 56, 57, 85, 87, 115, 116, 117],
			87 => [56, 57, 58, 86, 88, 116, 117, 118],
			88 => [57, 58, 59, 87, 89, 117, 118, 119],
			89 => [58, 59, 88, 118, 119],
			90 => [60, 61, 91, 120, 121],
			91 => [60, 61, 62, 90, 92, 120, 121, 122],
			92 => [61, 62, 63, 91, 93, 121, 122, 123],
			93 => [62, 63, 64, 92, 94, 122, 123, 124],
			94 => [63, 64, 65, 93, 95, 123, 124, 125],
			95 => [64, 65, 66, 94, 96, 124, 125, 126],
			96 => [65, 66, 67, 95, 97, 125, 126, 127],
			97 => [66, 67, 68, 96, 98, 126, 127, 128],
			98 => [67, 68, 69, 97, 99, 127, 128, 129],
			99 => [68, 69, 70, 98, 100, 128, 129, 130],
			100 => [69, 70, 71, 99, 101, 129, 130, 131],
			101 => [70, 71, 72, 100, 102, 130, 131, 132],
			102 => [71, 72, 73, 101, 103, 131, 132, 133],
			103 => [72, 73, 74, 102, 104, 132, 133, 134],
			104 => [73, 74, 75, 103, 105, 133, 134, 135],
			105 => [74, 75, 76, 104, 106, 134, 135, 136],
			106 => [75, 76, 77, 105, 107, 135, 136, 137],
			107 => [76, 77, 78, 106, 108, 136, 137, 138],
			108 => [77, 78, 79, 107, 109, 137, 138, 139],
			109 => [78, 79, 80, 108, 110, 138, 139, 140],
			110 => [79, 80, 81, 109, 111, 139, 140, 141],
			111 => [80, 81, 82, 110, 112, 140, 141, 142],
			112 => [81, 82, 83, 111, 113, 141, 142, 143],
			113 => [82, 83, 84, 112, 114, 142, 143, 144],
			114 => [83, 84, 85, 113, 115, 143, 144, 145],
			115 => [84, 85, 86, 114, 116, 144, 145, 146],
			116 => [85, 86, 87, 115, 117, 145, 146, 147],
			117 => [86, 87, 88, 116, 118, 146, 147, 148],
			118 => [87, 88, 89, 117, 119, 147, 148, 149],
			119 => [88, 89, 118, 148, 149],
			120 => [90, 91, 121, 150, 151],
			121 => [90, 91, 92, 120, 122, 150, 151, 152],
			122 => [91, 92, 93, 121, 123, 151, 152, 153],
			123 => [92, 93, 94, 122, 124, 152, 153, 154],
			124 => [93, 94, 95, 123, 125, 153, 154, 155],
			125 => [94, 95, 96, 124, 126, 154, 155, 156],
			126 => [95, 96, 97, 125, 127, 155, 156, 157],
			127 => [96, 97, 98, 126, 128, 156, 157, 158],
			128 => [97, 98, 99, 127, 129, 157, 158, 159],
			129 => [98, 99, 100, 128, 130, 158, 159, 160],
			130 => [99, 100, 101, 129, 131, 159, 160, 161],
			131 => [100, 101, 102, 130, 132, 160, 161, 162],
			132 => [101, 102, 103, 131, 133, 161, 162, 163],
			133 => [102, 103, 104, 132, 134, 162, 163, 164],
			134 => [103, 104, 105, 133, 135, 163, 164, 165],
			135 => [104, 105, 106, 134, 136, 164, 165, 166],
			136 => [105, 106, 107, 135, 137, 165, 166, 167],
			137 => [106, 107, 108, 136, 138, 166, 167, 168],
			138 => [107, 108, 109, 137, 139, 167, 168, 169],
			139 => [108, 109, 110, 138, 140, 168, 169, 170],
			140 => [109, 110, 111, 139, 141, 169, 170, 171],
			141 => [110, 111, 112, 140, 142, 170, 171, 172],
			142 => [111, 112, 113, 141, 143, 171, 172, 173],
			143 => [112, 113, 114, 142, 144, 172, 173, 174],
			144 => [113, 114, 115, 143, 145, 173, 174, 175],
			145 => [114, 115, 116, 144, 146, 174, 175, 176],
			146 => [115, 116, 117, 145, 147, 175, 176, 177],
			147 => [116, 117, 118, 146, 148, 176, 177, 178],
			148 => [117, 118, 119, 147, 149, 177, 178, 179],
			149 => [118, 119, 148, 178, 179],
			150 => [120, 121, 151, 180, 181],
			151 => [120, 121, 122, 150, 152, 180, 181, 182],
			152 => [121, 122, 123, 151, 153, 181, 182, 183],
			153 => [122, 123, 124, 152, 154, 182, 183, 184],
			154 => [123, 124, 125, 153, 155, 183, 184, 185],
			155 => [124, 125, 126, 154, 156, 184, 185, 186],
			156 => [125, 126, 127, 155, 157, 185, 186, 187],
			157 => [126, 127, 128, 156, 158, 186, 187, 188],
			158 => [127, 128, 129, 157, 159, 187, 188, 189],
			159 => [128, 129, 130, 158, 160, 188, 189, 190],
			160 => [129, 130, 131, 159, 161, 189, 190, 191],
			161 => [130, 131, 132, 160, 162, 190, 191, 192],
			162 => [131, 132, 133, 161, 163, 191, 192, 193],
			163 => [132, 133, 134, 162, 164, 192, 193, 194],
			164 => [133, 134, 135, 163, 165, 193, 194, 195],
			165 => [134, 135, 136, 164, 166, 194, 195, 196],
			166 => [135, 136, 137, 165, 167, 195, 196, 197],
			167 => [136, 137, 138, 166, 168, 196, 197, 198],
			168 => [137, 138, 139, 167, 169, 197, 198, 199],
			169 => [138, 139, 140, 168, 170, 198, 199, 200],
			170 => [139, 140, 141, 169, 171, 199, 200, 201],
			171 => [140, 141, 142, 170, 172, 200, 201, 202],
			172 => [141, 142, 143, 171, 173, 201, 202, 203],
			173 => [142, 143, 144, 172, 174, 202, 203, 204],
			174 => [143, 144, 145, 173, 175, 203, 204, 205],
			175 => [144, 145, 146, 174, 176, 204, 205, 206],
			176 => [145, 146, 147, 175, 177, 205, 206, 207],
			177 => [146, 147, 148, 176, 178, 206, 207, 208],
			178 => [147, 148, 149, 177, 179, 207, 208, 209],
			179 => [148, 149, 178, 208, 209],
			180 => [150, 151, 181, 210, 211],
			181 => [150, 151, 152, 180, 182, 210, 211, 212],
			182 => [151, 152, 153, 181, 183, 211, 212, 213],
			183 => [152, 153, 154, 182, 184, 212, 213, 214],
			184 => [153, 154, 155, 183, 185, 213, 214, 215],
			185 => [154, 155, 156, 184, 186, 214, 215, 216],
			186 => [155, 156, 157, 185, 187, 215, 216, 217],
			187 => [156, 157, 158, 186, 188, 216, 217, 218],
			188 => [157, 158, 159, 187, 189, 217, 218, 219],
			189 => [158, 159, 160, 188, 190, 218, 219, 220],
			190 => [159, 160, 161, 189, 191, 219, 220, 221],
			191 => [160, 161, 162, 190, 192, 220, 221, 222],
			192 => [161, 162, 163, 191, 193, 221, 222, 223],
			193 => [162, 163, 164, 192, 194, 222, 223, 224],
			194 => [163, 164, 165, 193, 195, 223, 224, 225],
			195 => [164, 165, 166, 194, 196, 224, 225, 226],
			196 => [165, 166, 167, 195, 197, 225, 226, 227],
			197 => [166, 167, 168, 196, 198, 226, 227, 228],
			198 => [167, 168, 169, 197, 199, 227, 228, 229],
			199 => [168, 169, 170, 198, 200, 228, 229, 230],
			200 => [169, 170, 171, 199, 201, 229, 230, 231],
			201 => [170, 171, 172, 200, 202, 230, 231, 232],
			202 => [171, 172, 173, 201, 203, 231, 232, 233],
			203 => [172, 173, 174, 202, 204, 232, 233, 234],
			204 => [173, 174, 175, 203, 205, 233, 234, 235],
			205 => [174, 175, 176, 204, 206, 234, 235, 236],
			206 => [175, 176, 177, 205, 207, 235, 236, 237],
			207 => [176, 177, 178, 206, 208, 236, 237, 238],
			208 => [177, 178, 179, 207, 209, 237, 238, 239],
			209 => [178, 179, 208, 238, 239],
			210 => [180, 181, 211, 240, 241],
			211 => [180, 181, 182, 210, 212, 240, 241, 242],
			212 => [181, 182, 183, 211, 213, 241, 242, 243],
			213 => [182, 183, 184, 212, 214, 242, 243, 244],
			214 => [183, 184, 185, 213, 215, 243, 244, 245],
			215 => [184, 185, 186, 214, 216, 244, 245, 246],
			216 => [185, 186, 187, 215, 217, 245, 246, 247],
			217 => [186, 187, 188, 216, 218, 246, 247, 248],
			218 => [187, 188, 189, 217, 219, 247, 248, 249],
			219 => [188, 189, 190, 218, 220, 248, 249, 250],
			220 => [189, 190, 191, 219, 221, 249, 250, 251],
			221 => [190, 191, 192, 220, 222, 250, 251, 252],
			222 => [191, 192, 193, 221, 223, 251, 252, 253],
			223 => [192, 193, 194, 222, 224, 252, 253, 254],
			224 => [193, 194, 195, 223, 225, 253, 254, 255],
			225 => [194, 195, 196, 224, 226, 254, 255, 256],
			226 => [195, 196, 197, 225, 227, 255, 256, 257],
			227 => [196, 197, 198, 226, 228, 256, 257, 258],
			228 => [197, 198, 199, 227, 229, 257, 258, 259],
			229 => [198, 199, 200, 228, 230, 258, 259, 260],
			230 => [199, 200, 201, 229, 231, 259, 260, 261],
			231 => [200, 201, 202, 230, 232, 260, 261, 262],
			232 => [201, 202, 203, 231, 233, 261, 262, 263],
			233 => [202, 203, 204, 232, 234, 262, 263, 264],
			234 => [203, 204, 205, 233, 235, 263, 264, 265],
			235 => [204, 205, 206, 234, 236, 264, 265, 266],
			236 => [205, 206, 207, 235, 237, 265, 266, 267],
			237 => [206, 207, 208, 236, 238, 266, 267, 268],
			238 => [207, 208, 209, 237, 239, 267, 268, 269],
			239 => [208, 209, 238, 268, 269],
			240 => [210, 211, 241, 270, 271],
			241 => [210, 211, 212, 240, 242, 270, 271, 272],
			242 => [211, 212, 213, 241, 243, 271, 272, 273],
			243 => [212, 213, 214, 242, 244, 272, 273, 274],
			244 => [213, 214, 215, 243, 245, 273, 274, 275],
			245 => [214, 215, 216, 244, 246, 274, 275, 276],
			246 => [215, 216, 217, 245, 247, 275, 276, 277],
			247 => [216, 217, 218, 246, 248, 276, 277, 278],
			248 => [217, 218, 219, 247, 249, 277, 278, 279],
			249 => [218, 219, 220, 248, 250, 278, 279, 280],
			250 => [219, 220, 221, 249, 251, 279, 280, 281],
			251 => [220, 221, 222, 250, 252, 280, 281, 282],
			252 => [221, 222, 223, 251, 253, 281, 282, 283],
			253 => [222, 223, 224, 252, 254, 282, 283, 284],
			254 => [223, 224, 225, 253, 255, 283, 284, 285],
			255 => [224, 225, 226, 254, 256, 284, 285, 286],
			256 => [225, 226, 227, 255, 257, 285, 286, 287],
			257 => [226, 227, 228, 256, 258, 286, 287, 288],
			258 => [227, 228, 229, 257, 259, 287, 288, 289],
			259 => [228, 229, 230, 258, 260, 288, 289, 290],
			260 => [229, 230, 231, 259, 261, 289, 290, 291],
			261 => [230, 231, 232, 260, 262, 290, 291, 292],
			262 => [231, 232, 233, 261, 263, 291, 292, 293],
			263 => [232, 233, 234, 262, 264, 292, 293, 294],
			264 => [233, 234, 235, 263, 265, 293, 294, 295],
			265 => [234, 235, 236, 264, 266, 294, 295, 296],
			266 => [235, 236, 237, 265, 267, 295, 296, 297],
			267 => [236, 237, 238, 266, 268, 296, 297, 298],
			268 => [237, 238, 239, 267, 269, 297, 298, 299],
			269 => [238, 239, 268, 298, 299],
			270 => [240, 241, 271, 300, 301],
			271 => [240, 241, 242, 270, 272, 300, 301, 302],
			272 => [241, 242, 243, 271, 273, 301, 302, 303],
			273 => [242, 243, 244, 272, 274, 302, 303, 304],
			274 => [243, 244, 245, 273, 275, 303, 304, 305],
			275 => [244, 245, 246, 274, 276, 304, 305, 306],
			276 => [245, 246, 247, 275, 277, 305, 306, 307],
			277 => [246, 247, 248, 276, 278, 306, 307, 308],
			278 => [247, 248, 249, 277, 279, 307, 308, 309],
			279 => [248, 249, 250, 278, 280, 308, 309, 310],
			280 => [249, 250, 251, 279, 281, 309, 310, 311],
			281 => [250, 251, 252, 280, 282, 310, 311, 312],
			282 => [251, 252, 253, 281, 283, 311, 312, 313],
			283 => [252, 253, 254, 282, 284, 312, 313, 314],
			284 => [253, 254, 255, 283, 285, 313, 314, 315],
			285 => [254, 255, 256, 284, 286, 314, 315, 316],
			286 => [255, 256, 257, 285, 287, 315, 316, 317],
			287 => [256, 257, 258, 286, 288, 316, 317, 318],
			288 => [257, 258, 259, 287, 289, 317, 318, 319],
			289 => [258, 259, 260, 288, 290, 318, 319, 320],
			290 => [259, 260, 261, 289, 291, 319, 320, 321],
			291 => [260, 261, 262, 290, 292, 320, 321, 322],
			292 => [261, 262, 263, 291, 293, 321, 322, 323],
			293 => [262, 263, 264, 292, 294, 322, 323, 324],
			294 => [263, 264, 265, 293, 295, 323, 324, 325],
			295 => [264, 265, 266, 294, 296, 324, 325, 326],
			296 => [265, 266, 267, 295, 297, 325, 326, 327],
			297 => [266, 267, 268, 296, 298, 326, 327, 328],
			298 => [267, 268, 269, 297, 299, 327, 328, 329],
			299 => [268, 269, 298, 328, 329],
			300 => [270, 271, 301, 330, 331],
			301 => [270, 271, 272, 300, 302, 330, 331, 332],
			302 => [271, 272, 273, 301, 303, 331, 332, 333],
			303 => [272, 273, 274, 302, 304, 332, 333, 334],
			304 => [273, 274, 275, 303, 305, 333, 334, 335],
			305 => [274, 275, 276, 304, 306, 334, 335, 336],
			306 => [275, 276, 277, 305, 307, 335, 336, 337],
			307 => [276, 277, 278, 306, 308, 336, 337, 338],
			308 => [277, 278, 279, 307, 309, 337, 338, 339],
			309 => [278, 279, 280, 308, 310, 338, 339, 340],
			310 => [279, 280, 281, 309, 311, 339, 340, 341],
			311 => [280, 281, 282, 310, 312, 340, 341, 342],
			312 => [281, 282, 283, 311, 313, 341, 342, 343],
			313 => [282, 283, 284, 312, 314, 342, 343, 344],
			314 => [283, 284, 285, 313, 315, 343, 344, 345],
			315 => [284, 285, 286, 314, 316, 344, 345, 346],
			316 => [285, 286, 287, 315, 317, 345, 346, 347],
			317 => [286, 287, 288, 316, 318, 346, 347, 348],
			318 => [287, 288, 289, 317, 319, 347, 348, 349],
			319 => [288, 289, 290, 318, 320, 348, 349, 350],
			320 => [289, 290, 291, 319, 321, 349, 350, 351],
			321 => [290, 291, 292, 320, 322, 350, 351, 352],
			322 => [291, 292, 293, 321, 323, 351, 352, 353],
			323 => [292, 293, 294, 322, 324, 352, 353, 354],
			324 => [293, 294, 295, 323, 325, 353, 354, 355],
			325 => [294, 295, 296, 324, 326, 354, 355, 356],
			326 => [295, 296, 297, 325, 327, 355, 356, 357],
			327 => [296, 297, 298, 326, 328, 356, 357, 358],
			328 => [297, 298, 299, 327, 329, 357, 358, 359],
			329 => [298, 299, 328, 358, 359],
			330 => [300, 301, 331, 360, 361],
			331 => [300, 301, 302, 330, 332, 360, 361, 362],
			332 => [301, 302, 303, 331, 333, 361, 362, 363],
			333 => [302, 303, 304, 332, 334, 362, 363, 364],
			334 => [303, 304, 305, 333, 335, 363, 364, 365],
			335 => [304, 305, 306, 334, 336, 364, 365, 366],
			336 => [305, 306, 307, 335, 337, 365, 366, 367],
			337 => [306, 307, 308, 336, 338, 366, 367, 368],
			338 => [307, 308, 309, 337, 339, 367, 368, 369],
			339 => [308, 309, 310, 338, 340, 368, 369, 370],
			340 => [309, 310, 311, 339, 341, 369, 370, 371],
			341 => [310, 311, 312, 340, 342, 370, 371, 372],
			342 => [311, 312, 313, 341, 343, 371, 372, 373],
			343 => [312, 313, 314, 342, 344, 372, 373, 374],
			344 => [313, 314, 315, 343, 345, 373, 374, 375],
			345 => [314, 315, 316, 344, 346, 374, 375, 376],
			346 => [315, 316, 317, 345, 347, 375, 376, 377],
			347 => [316, 317, 318, 346, 348, 376, 377, 378],
			348 => [317, 318, 319, 347, 349, 377, 378, 379],
			349 => [318, 319, 320, 348, 350, 378, 379, 380],
			350 => [319, 320, 321, 349, 351, 379, 380, 381],
			351 => [320, 321, 322, 350, 352, 380, 381, 382],
			352 => [321, 322, 323, 351, 353, 381, 382, 383],
			353 => [322, 323, 324, 352, 354, 382, 383, 384],
			354 => [323, 324, 325, 353, 355, 383, 384, 385],
			355 => [324, 325, 326, 354, 356, 384, 385, 386],
			356 => [325, 326, 327, 355, 357, 385, 386, 387],
			357 => [326, 327, 328, 356, 358, 386, 387, 388],
			358 => [327, 328, 329, 357, 359, 387, 388, 389],
			359 => [328, 329, 358, 388, 389],
			360 => [330, 331, 361, 390, 391],
			361 => [330, 331, 332, 360, 362, 390, 391, 392],
			362 => [331, 332, 333, 361, 363, 391, 392, 393],
			363 => [332, 333, 334, 362, 364, 392, 393, 394],
			364 => [333, 334, 335, 363, 365, 393, 394, 395],
			365 => [334, 335, 336, 364, 366, 394, 395, 396],
			366 => [335, 336, 337, 365, 367, 395, 396, 397],
			367 => [336, 337, 338, 366, 368, 396, 397, 398],
			368 => [337, 338, 339, 367, 369, 397, 398, 399],
			369 => [338, 339, 340, 368, 370, 398, 399, 400],
			370 => [339, 340, 341, 369, 371, 399, 400, 401],
			371 => [340, 341, 342, 370, 372, 400, 401, 402],
			372 => [341, 342, 343, 371, 373, 401, 402, 403],
			373 => [342, 343, 344, 372, 374, 402, 403, 404],
			374 => [343, 344, 345, 373, 375, 403, 404, 405],
			375 => [344, 345, 346, 374, 376, 404, 405, 406],
			376 => [345, 346, 347, 375, 377, 405, 406, 407],
			377 => [346, 347, 348, 376, 378, 406, 407, 408],
			378 => [347, 348, 349, 377, 379, 407, 408, 409],
			379 => [348, 349, 350, 378, 380, 408, 409, 410],
			380 => [349, 350, 351, 379, 381, 409, 410, 411],
			381 => [350, 351, 352, 380, 382, 410, 411, 412],
			382 => [351, 352, 353, 381, 383, 411, 412, 413],
			383 => [352, 353, 354, 382, 384, 412, 413, 414],
			384 => [353, 354, 355, 383, 385, 413, 414, 415],
			385 => [354, 355, 356, 384, 386, 414, 415, 416],
			386 => [355, 356, 357, 385, 387, 415, 416, 417],
			387 => [356, 357, 358, 386, 388, 416, 417, 418],
			388 => [357, 358, 359, 387, 389, 417, 418, 419],
			389 => [358, 359, 388, 418, 419],
			390 => [360, 361, 391, 420, 421],
			391 => [360, 361, 362, 390, 392, 420, 421, 422],
			392 => [361, 362, 363, 391, 393, 421, 422, 423],
			393 => [362, 363, 364, 392, 394, 422, 423, 424],
			394 => [363, 364, 365, 393, 395, 423, 424, 425],
			395 => [364, 365, 366, 394, 396, 424, 425, 426],
			396 => [365, 366, 367, 395, 397, 425, 426, 427],
			397 => [366, 367, 368, 396, 398, 426, 427, 428],
			398 => [367, 368, 369, 397, 399, 427, 428, 429],
			399 => [368, 369, 370, 398, 400, 428, 429, 430],
			400 => [369, 370, 371, 399, 401, 429, 430, 431],
			401 => [370, 371, 372, 400, 402, 430, 431, 432],
			402 => [371, 372, 373, 401, 403, 431, 432, 433],
			403 => [372, 373, 374, 402, 404, 432, 433, 434],
			404 => [373, 374, 375, 403, 405, 433, 434, 435],
			405 => [374, 375, 376, 404, 406, 434, 435, 436],
			406 => [375, 376, 377, 405, 407, 435, 436, 437],
			407 => [376, 377, 378, 406, 408, 436, 437, 438],
			408 => [377, 378, 379, 407, 409, 437, 438, 439],
			409 => [378, 379, 380, 408, 410, 438, 439, 440],
			410 => [379, 380, 381, 409, 411, 439, 440, 441],
			411 => [380, 381, 382, 410, 412, 440, 441, 442],
			412 => [381, 382, 383, 411, 413, 441, 442, 443],
			413 => [382, 383, 384, 412, 414, 442, 443, 444],
			414 => [383, 384, 385, 413, 415, 443, 444, 445],
			415 => [384, 385, 386, 414, 416, 444, 445, 446],
			416 => [385, 386, 387, 415, 417, 445, 446, 447],
			417 => [386, 387, 388, 416, 418, 446, 447, 448],
			418 => [387, 388, 389, 417, 419, 447, 448, 449],
			419 => [388, 389, 418, 448, 449],
			420 => [390, 391, 421, 450, 451],
			421 => [390, 391, 392, 420, 422, 450, 451, 452],
			422 => [391, 392, 393, 421, 423, 451, 452, 453],
			423 => [392, 393, 394, 422, 424, 452, 453, 454],
			424 => [393, 394, 395, 423, 425, 453, 454, 455],
			425 => [394, 395, 396, 424, 426, 454, 455, 456],
			426 => [395, 396, 397, 425, 427, 455, 456, 457],
			427 => [396, 397, 398, 426, 428, 456, 457, 458],
			428 => [397, 398, 399, 427, 429, 457, 458, 459],
			429 => [398, 399, 400, 428, 430, 458, 459, 460],
			430 => [399, 400, 401, 429, 431, 459, 460, 461],
			431 => [400, 401, 402, 430, 432, 460, 461, 462],
			432 => [401, 402, 403, 431, 433, 461, 462, 463],
			433 => [402, 403, 404, 432, 434, 462, 463, 464],
			434 => [403, 404, 405, 433, 435, 463, 464, 465],
			435 => [404, 405, 406, 434, 436, 464, 465, 466],
			436 => [405, 406, 407, 435, 437, 465, 466, 467],
			437 => [406, 407, 408, 436, 438, 466, 467, 468],
			438 => [407, 408, 409, 437, 439, 467, 468, 469],
			439 => [408, 409, 410, 438, 440, 468, 469, 470],
			440 => [409, 410, 411, 439, 441, 469, 470, 471],
			441 => [410, 411, 412, 440, 442, 470, 471, 472],
			442 => [411, 412, 413, 441, 443, 471, 472, 473],
			443 => [412, 413, 414, 442, 444, 472, 473, 474],
			444 => [413, 414, 415, 443, 445, 473, 474, 475],
			445 => [414, 415, 416, 444, 446, 474, 475, 476],
			446 => [415, 416, 417, 445, 447, 475, 476, 477],
			447 => [416, 417, 418, 446, 448, 476, 477, 478],
			448 => [417, 418, 419, 447, 449, 477, 478, 479],
			449 => [418, 419, 448, 478, 479],
			450 => [420, 421, 451],
			451 => [420, 421, 422, 450, 452],
			452 => [421, 422, 423, 451, 453],
			453 => [422, 423, 424, 452, 454],
			454 => [423, 424, 425, 453, 455],
			455 => [424, 425, 426, 454, 456],
			456 => [425, 426, 427, 455, 457],
			457 => [426, 427, 428, 456, 458],
			458 => [427, 428, 429, 457, 459],
			459 => [428, 429, 430, 458, 460],
			460 => [429, 430, 431, 459, 461],
			461 => [430, 431, 432, 460, 462],
			462 => [431, 432, 433, 461, 463],
			463 => [432, 433, 434, 462, 464],
			464 => [433, 434, 435, 463, 465],
			465 => [434, 435, 436, 464, 466],
			466 => [435, 436, 437, 465, 467],
			467 => [436, 437, 438, 466, 468],
			468 => [437, 438, 439, 467, 469],
			469 => [438, 439, 440, 468, 470],
			470 => [439, 440, 441, 469, 471],
			471 => [440, 441, 442, 470, 472],
			472 => [441, 442, 443, 471, 473],
			473 => [442, 443, 444, 472, 474],
			474 => [443, 444, 445, 473, 475],
			475 => [444, 445, 446, 474, 476],
			476 => [445, 446, 447, 475, 477],
			477 => [446, 447, 448, 476, 478],
			478 => [447, 448, 449, 477, 479],
			479 => [448, 449, 478],
			_ => []
		};

#elif TEST
		Debug.Assert(index < 64);

		return index switch
		{
			0 => [1, 8, 9],
			1 => [0, 2, 8, 9, 10],
			2 => [1, 3, 9, 10, 11],
			3 => [2, 4, 10, 11, 12],
			4 => [3, 5, 11, 12, 13],
			5 => [4, 6, 12, 13, 14],
			6 => [5, 7, 13, 14, 15],
			7 => [6, 14, 15],
			8 => [0, 1, 9, 16, 17],
			9 => [0, 1, 2, 8, 10, 16, 17, 18],
			10 => [1, 2, 3, 9, 11, 17, 18, 19],
			11 => [2, 3, 4, 10, 12, 18, 19, 20],
			12 => [3, 4, 5, 11, 13, 19, 20, 21],
			13 => [4, 5, 6, 12, 14, 20, 21, 22],
			14 => [5, 6, 7, 13, 15, 21, 22, 23],
			15 => [6, 7, 14, 22, 23],
			16 => [8, 9, 17, 24, 25],
			17 => [8, 9, 10, 16, 18, 24, 25, 26],
			18 => [9, 10, 11, 17, 19, 25, 26, 27],
			19 => [10, 11, 12, 18, 20, 26, 27, 28],
			20 => [11, 12, 13, 19, 21, 27, 28, 29],
			21 => [12, 13, 14, 20, 22, 28, 29, 30],
			22 => [13, 14, 15, 21, 23, 29, 30, 31],
			23 => [14, 15, 22, 30, 31],
			24 => [16, 17, 25, 32, 33],
			25 => [16, 17, 18, 24, 26, 32, 33, 34],
			26 => [17, 18, 19, 25, 27, 33, 34, 35],
			27 => [18, 19, 20, 26, 28, 34, 35, 36],
			28 => [19, 20, 21, 27, 29, 35, 36, 37],
			29 => [20, 21, 22, 28, 30, 36, 37, 38],
			30 => [21, 22, 23, 29, 31, 37, 38, 39],
			31 => [22, 23, 30, 38, 39],
			32 => [24, 25, 33, 40, 41],
			33 => [24, 25, 26, 32, 34, 40, 41, 42],
			34 => [25, 26, 27, 33, 35, 41, 42, 43],
			35 => [26, 27, 28, 34, 36, 42, 43, 44],
			36 => [27, 28, 29, 35, 37, 43, 44, 45],
			37 => [28, 29, 30, 36, 38, 44, 45, 46],
			38 => [29, 30, 31, 37, 39, 45, 46, 47],
			39 => [30, 31, 38, 46, 47],
			40 => [32, 33, 41, 48, 49],
			41 => [32, 33, 34, 40, 42, 48, 49, 50],
			42 => [33, 34, 35, 41, 43, 49, 50, 51],
			43 => [34, 35, 36, 42, 44, 50, 51, 52],
			44 => [35, 36, 37, 43, 45, 51, 52, 53],
			45 => [36, 37, 38, 44, 46, 52, 53, 54],
			46 => [37, 38, 39, 45, 47, 53, 54, 55],
			47 => [38, 39, 46, 54, 55],
			48 => [40, 41, 49, 56, 57],
			49 => [40, 41, 42, 48, 50, 56, 57, 58],
			50 => [41, 42, 43, 49, 51, 57, 58, 59],
			51 => [42, 43, 44, 50, 52, 58, 59, 60],
			52 => [43, 44, 45, 51, 53, 59, 60, 61],
			53 => [44, 45, 46, 52, 54, 60, 61, 62],
			54 => [45, 46, 47, 53, 55, 61, 62, 63],
			55 => [46, 47, 54, 62, 63],
			56 => [48, 49, 57],
			57 => [48, 49, 50, 56, 58],
			58 => [49, 50, 51, 57, 59],
			59 => [50, 51, 52, 58, 60],
			60 => [51, 52, 53, 59, 61],
			61 => [52, 53, 54, 60, 62],
			62 => [53, 54, 55, 61, 63],
			63 => [54, 55, 62],
			_ => []
		};
#endif
	}

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static void ScatterMines(Span<int> mines)
	{
#if BEGINNER
		ReadOnlySpan<int> ignore = [10, 11, 12, 19, 21, 28, 29, 30];
#elif INTERMEDIATE
		ReadOnlySpan<int> ignore = [32, 33, 34, 48, 50, 64, 65, 66];
#elif EXPERT
		ReadOnlySpan<int> ignore = [62, 63, 64, 92, 94, 122, 123, 124];
#elif TEST
		ReadOnlySpan<int> ignore = [];
#endif

		// we must fill the buffer with -1 because the default (0) is a valid index
		mines.Fill(-1);

		var n = 0;
		Span<byte> pool = stackalloc byte[2056];
		RandomNumberGenerator.Fill(pool);

		int m;
		foreach (ref var x in mines)
		{
			// we use a loop to prevent duplicate indexes
			do
			{
				var slice = pool.Slice(n, sizeof(int));
				n += sizeof(int);

				// Warning -> do not calculate the Math.Abs of the immediate BitConverter.ToInt32(slice) result
				// In the rare case where it equals int.MinValue, this would throw an overflow exception.
				// By first modding by the nodeCount, we can guarantee safety of the Math.Abs method
				m = Math.Abs(BitConverter.ToInt32(slice) % NodeMatrix.Length);

				Debug.Assert(m >= 0);
				Debug.Assert(m < NodeMatrix.Length);
			} while (m == NodeMatrix.SafeNodeIndex || ignore.Contains(m) || mines.Contains(m));

			x = m;
		}
	}

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static void VectorScatterMines(Span<int> mines, ReadOnlySpan<int> ignore, int safeNodeIndex)
	{
		// we must fill the buffer with -1 because the default (0) is a valid index
		mines.Fill(-1);

		var n = 0;
		var poolN = 0;
		Span<byte> pool = stackalloc byte[2056];
		RandomNumberGenerator.Fill(pool);
		System.Numerics.Vector<byte> bar;
		System.Numerics.Vector<uint> foo = default;
		int m;
		foreach (ref var x in mines)
		{
			// we use a loop to prevent duplicate indexes
			do
			{
				if (n == 0) // vector.count / sizeof(int)
				{
					bar = new System.Numerics.Vector<byte>(pool.Slice(poolN, 32)); // vector.count instead of 32
					foo = System.Numerics.Vector.AsVectorUInt32(bar);
					poolN++;
				}

				// Warning -> do not calculate the Math.Abs of the immediate BitConverter.ToInt32(slice) result
				// In the rare case where it equals int.MinValue, this would throw an overflow exception.
				// By first modding by the nodeCount, we can guarantee safety of the Math.Abs method
				m = (int)(foo[n] % NodeMatrix.Length);

				n++;
				if (n == 8) { n = 0; }

				Debug.Assert(m >= 0);
				Debug.Assert(m < NodeMatrix.Length);
			} while (m == safeNodeIndex || mines.Contains(m) || ignore.Contains(m));

			x = m;
		}
	}

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	internal static byte GetAdjacentMineCount(ReadOnlySpan<int> mines, int nodeIndex)
	{
		Debug.Assert(nodeIndex >= 0);

		byte n = 0;
		foreach (var i in GetAdjacentNodeIndexes(nodeIndex))
		{
			if (mines.Contains(i))
			{
				n++;
			}
		}
		return n;
	}

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static byte GetAdjacentFlaggedNodeCount(ReadOnlySpan<Node> nodes, int nodeIndex)
	{
		Debug.Assert(nodeIndex >= 0);
		Debug.Assert(nodeIndex < NodeMatrix.Length);

		byte n = 0;
		foreach (var i in GetAdjacentNodeIndexes(nodeIndex))
		{
			if (nodes[i].State is NodeState.Flagged)
			{
				n++;
			}
		}
		return n;
	}

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	public static bool HasHiddenAdjacentNodes(ReadOnlySpan<Node> nodes, int nodeIndex)
	{
		Debug.Assert(nodeIndex >= 0);
		Debug.Assert(nodeIndex < NodeMatrix.Length);

		foreach (var i in GetAdjacentNodeIndexes(nodeIndex))
		{
			if (nodes[i].State is NodeState.Hidden)
			{
				return true;
			}
		}

		return false;
	}

	public static string Log(ReadOnlySpan<Node> nodes)
	{
		var sb = new System.Text.StringBuilder();
		foreach (var node in nodes)
		{
			sb.AppendLine(node.NewNodeCtor());
		}
		return sb.ToString();
	}
}
